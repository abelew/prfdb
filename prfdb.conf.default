prefix = "${HOME}/browser"
max_struct_length = 99    ## The maximum structure size to be examined
do_nupack = 1             ## Run nupack on sequences?
do_pknots = 0             ## Run pknots on sequence?
do_mfold = 0              ## Run mfold on the sequence as a mfe bootstrap?
do_boot = 1               ## Perform our faux bootstrap
arch_specific_exe = 1     ## Architecture specific executables (used for a pbs environment)
boot_iterations = 100
boot_mfe_algorithms = { pknots => \&RNAFolders::Pknots_Boot, nupack => \&RNAFolders::Nupack_Boot, }
boot_randomizers = { array => \&MoreRandom::ArrayShuffle, }
errorfile = "$(prefix)/prfdb.err"         ## Location of error file
logfile = "$(prefix)/prfdb.log"           ## Location of output file
basedir = $(prefix)                       ## The base directory of this crap
tmpdir = "$(prefix)/work"                 ## Temporary directory, fasta files live there
bindir = "$(prefix)/work"
nupack_dir = "$(prefix)/work"             ## Where does nupack live?
nupack = "Fold.out"
nupack_boot = "Fold.out.boot"
rnamotif_dir = "$(prefix)/work"
rnamotif = 'rnamotif'
rmprune_dir = "$(prefix)/work"
rmprune = 'rmprune'     ## Location of rmprune
mfold_dir = "$(prefix)/work"
mfold => 'mfold'         ## Location of mfold
mfold_lib = "$(prefix)/dat"
pknots_dir = "$(prefix)/work"
pknots = 'pknots'       ## Location of pknots
zcat_dir = "$(prefix)/work"
zcat = 'zcat'           ## Location of zcat (rename to gzcat for OSX)
db = 'DATABASENAME'         ## Name of mysql database
host = 'DATABASEHOST' ## Mysql database hostname
user = 'DATABASEUSER'           ## Mysql username
pass = 'DATABASEPASSWORD'       ## Mysql password
INCLUDE_PATH = 'html/'  ## Template directory for html templates
INTERPOLATE = 1         ## Template interpolation of variables
POST_CHOMP = 1          ## Template get rid of newlines
PRE_PROCESS = 'header'  ## Template html headers
EVAL_PERL = 1           ## Template evaluate inline perl code
ABSOLUTE = 1
action = 'die'          ## Default action for multiple action script(s)
#                      descriptor_template => "$prefix/descr/template.desc",  ## Rnamotif template descriptor file
descriptor_file = "$(prefix)/descr/rnamotif_descriptor.desc"  ## Rnamotif descriptor output
slip_site_1 = '^n\{3\}$' ## Rnamotif first 3 bases of slippery site
slip_site_2 = '^w\{3\}$' ## Rnamotif bases 4-6 of slippery site
slip_site_3 = '^h\{3\}$' ## Rnamotif bases 7-9 of slippery site
slip_site_spacer_min = 5 ## Rnamotif slippery site spacer minimum
slip_site_spacer_max = 9 ## Rnamotif slippery site spacer max
stem1_min =  4            ## Rnamotif stem
stem1_max = 20          ## Rnamotif stem
stem1_bulge = 0.8       ## Rnamotif stem percentage match
stem1_spacer_min = 1    ## Rnamotif first spacer min
stem1_spacer_max = 3    ## Rnamotif first spacer max
stem2_min = 4           ## Rnamotif stem2 min
stem2_max = 20          ## Rnamotif stem2 max
stem2_bulge = 0.8       ## Rnamotif stem2 percentage max
stem2_loop_min = 0      ## Rnamotif second loop min
stem2_loop_max = 3      ## Rnamotif second loop max
stem2_spacer_min = 0    ## Rnamotif second spacer min
stem2_spacer_max = 100  ## Rnamotif second spacer max
#### The following define the mysql datatypes for common fields in the database
sql_id = 'int not null auto_increment'
sql_species = 'varchar(40) not null'
sql_accession = 'varchar(80)'
sql_genename = 'varchar(80)'
sql_comment = 'text not null'
sql_timestamp = 'TIMESTAMP ON UPDATE CURRENT_TIMESTAMP DEFAULT CURRENT_TIMESTAMP'
#### Change the number of bases allowed in a loop before making a new stem
#### In the PkParser
#max_spaces = 4
pbs_template = 'pbs_template'
pbs_arches = 'aix4 irix6 linux'
pbs_shell = '/bin/bash'
pbs_memory = '1400'
pbs_cpu = '1'
pbs_partialname = 'fold'
perl = '/usr/local/bin/perl'
daemon_name = 'folder_daemon.pl'
num_daemons = '20'
