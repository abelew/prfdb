db = 'prfdb_test'
#db = 'prfdb07'
base = "${HOME}"
prefix = "$(base)/prfdb07"
queue_table = "queue"
seqlength = 99    ## The maximum structure size to be examined, add 1.
host = 'prfdb.no-ip.org' ## Mysql database hostname
user = 'trey'           ## Mysql username
pass = 'Iactilm2'       ## Mysql password
basedir = $(prefix)
workdir = "$(prefix)/work"                 ## Temporary directory, fasta files live there
bindir = "$(prefix)/work"
window_space = 15    ## The number of spaces between mfe folding windows
do_nupack = 1             ## Run nupack on sequences?
do_pknots = 1             ## Run pknots on sequence?
do_boot = 1               ## Perform our faux bootstrap
do_overlap = 0            ## Check on overlapping orfs
nupack_nopairs_hack = 1   ## For the NCI systems I hacked nupack
arch_specific_exe = 0     ## Architecture specific executables (used for a pbs environment)
boot_iterations = 100
boot_mfe_algorithms = { pknots => \&RNAFolders::Pknots_Boot, nupack => \&RNAFolders::Nupack_Boot_NOPAIRS, }
boot_randomizers = { array => \&MoreRandom::ArrayShuffle, dinuc => \&MoreRandom::Squid_Dinuc }
errorfile = "$(prefix)/prfdb.err"            ## Error file
logfile = "$(prefix)/prfdb.log"           ## Location of output file
nupack_dir = "$(prefix)/work"             ## Where does nupack live?
nupack = "Fold.out.nopairs"
#nupack_mfe = "Fold.out.boot.nopairs"
nupack_mfe = "Fold.out.boot.nopairs"
#nupack_boot = "Fold.out.boot.nopairs"
nupack_boot = "Fold.out.boot.nopairs"
rnamotif_dir = "$(prefix)/work"
rnamotif = 'rnamotif'
rmprune_dir = "$(prefix)/work"
rmprune = 'rmprune'     ## Location of rmprune
zcat_dir = "$(prefix)/work"
zcat = 'zcat'           ## Location of zcat (rename to gzcat for OSX)
INCLUDE_PATH = 'html/'  ## Template directory for html templates
INTERPOLATE = 1         ## Template interpolation of variables
POST_CHOMP = 1          ## Template get rid of newlines
PRE_PROCESS = 'header'  ## Template html headers
EVAL_PERL = 1           ## Template evaluate inline perl code
ABSOLUTE = 1
action = 'die'
#                      descriptor_template => "$prefix/descr/template.desc",  ## Rnamotif template descriptor file
descriptor_file = "$(prefix)/descr/template.desc"  ## Rnamotif descriptor output
slip_site_1 = '^n\{3\}$' ## Rnamotif first 3 bases of slippery site
slip_site_2 = '^w\{3\}$' ## Rnamotif bases 4-6 of slippery site
slip_site_3 = '^h\{3\}$' ## Rnamotif bases 7-9 of slippery site
slip_site_spacer_min = 0 ## Rnamotif slippery site spacer minimum
slip_site_spacer_max = 15 ## Rnamotif slippery site spacer max
stem1_min =  4            ## Rnamotif stem
stem1_max = 20          ## Rnamotif stem
stem1_bulge = 0.8       ## Rnamotif stem percentage match
stem1_spacer_min = 1    ## Rnamotif first spacer min
stem1_spacer_max = 3    ## Rnamotif first spacer max
stem2_min = 4           ## Rnamotif stem2 min
stem2_max = 20          ## Rnamotif stem2 max
stem2_bulge = 0.8       ## Rnamotif stem2 percentage max
stem2_loop_min = 0      ## Rnamotif second loop min
stem2_loop_max = 3      ## Rnamotif second loop max
stem2_spacer_min = 0    ## Rnamotif second spacer min
stem2_spacer_max = 100  ## Rnamotif second spacer max
#                      ### The following define the mysql datatypes for common fields in the database
#### Change the number of bases allowed in a loop before making a new stem
#### In the PkParser
#max_spaces = 4
pbs_template = 'pbs_template'
pbs_arches = 'aix4 irix6 linux'
pbs_shell = { aix4 => '/usr/bin/bash', irix6 => '/usr/local/bin/bash', linux => '/usr/bin/bash' }
pbs_memory = '2000'
pbs_cput = '220:01:00'
pbs_cpu = '1'
pbs_partialname = 'fold'
perl = '/usr/local/bin/perl'
daemon_name = 'folder_daemon.pl'
num_daemons = '50'
condor_memory = '512'
condor_os = 'OSX'
condor_arch = 'PPC'
condor_universe = 'vanilla'

